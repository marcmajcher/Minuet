{"version":3,"sources":["hooks/useRandom.js","lib/defaultData.js","lib/dataSlice.js","lib/defaultResources.js","lib/resourceSlice.js","assets/strings-en.js","lib/gameSlice.js","hooks/useHeartbeat.js","hooks/useEvents.js","components/Resource.js","components/ResourceList.js","components/Log.js","components/buttons/DecantButton.js","components/buttons/CooldownButton.js","components/buttons/ExploreButton.js","components/ActionPanel.js","components/MainPage.js","assets/orbital.svg","components/Header.js","components/Footer.js","App.js","lib/store.js","index.js"],"names":["rollBetween","min","max","times","total","i","Math","random","defaultData","available_biomass","amount","decay","generate_min","generate_max","cool_explore","type","seconds","dataSlice","createSlice","name","initialState","reducers","warmCooldowns","state","payload","Object","entries","forEach","key","data","ms","startCooldown","addColonistBiomass","decayBiomass","actions","defaultResources","stability","id","rate","xp","biomass","egregore","Number","MAX_VALUE","resourceSlice","updateAllResources","action","resource","newAmount","addResource","setResourceRate","showResource","setDefaultResources","val","strings","btn_clear","btn_decant","btn_explore","btn_save","msg_log_start","msg_decant","msg_no_resources","msg_colonist_expired","res_stability","res_experience","res_biomass","res_egregore","debug","fps","logEntries","paused","frozen","decants","colonistId","gameSlice","pause","unpause","setFPS","freeze","start","log","message","options","string","template","replace","printString","push","console","decant","setColonistId","useHeartbeat","dispatch","useDispatch","events","useSelector","s","game","resources","colonist","useEvents","savedCallback","useRef","useEffect","setInterval","current","clearInterval","Resource","className","toFixed","ResourceList","numDecants","values","map","Log","entry","DecantButton","Date","now","toString","substr","onClick","CooldownButton","cooldown","cool_id","label_id","callback","style","width","disabled","ceil","ExploreButton","experience","ActionPanel","MainPage","Header","src","orbit","alt","Footer","App","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb396619.chunk.js","sourcesContent":["export function rollBetween(min, max, times = 1) {\n  let total = 0;\n  for (let i = 0; i < times; i++) {\n    total += Math.random() * (max - min) + min;\n  }\n  return total;\n}\n\nexport default function useRandom() {\n  return { rollBetween };\n}\n","const defaultData = {\n  available_biomass: {\n    amount: 0,\n    decay: 0.5,\n    generate_min: 60,\n    generate_max: 90,\n  },\n  cool_explore: {\n    type: 'cooldown',\n    max: 12,\n    seconds: 0,\n  },\n};\n\nexport default defaultData;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { rollBetween } from '../hooks/useRandom';\nimport initialState from './defaultData';\n\nexport const dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    warmCooldowns: (state, { payload }) => {\n      Object.entries(state).forEach(([key, data]) => {\n        const ms = payload / 1000;\n        if (data.type === 'cooldown' && data.seconds > 0) {\n          state[key].seconds = Math.max(data.seconds - ms, 0);\n        }\n      });\n    },\n    startCooldown: (state, { payload }) => {\n      state[payload].seconds = state[payload].max;\n    },\n    addColonistBiomass: (state, { payload }) => {\n      state.available_biomass.amount += rollBetween(\n        state.available_biomass.generate_min,\n        state.available_biomass.generate_max,\n        payload || 1\n      );\n    },\n    decayBiomass: (state) => {\n      state.available_biomass.amount -=\n        state.available_biomass.amount * state.available_biomass.decay;\n    },\n  },\n});\n\nexport const {\n  warmCooldowns,\n  startCooldown,\n  addColonistBiomass,\n  decayBiomass,\n} = dataSlice.actions;\nexport default dataSlice.reducer;\n","const defaultResources = {\n  stability: {\n    id: 1,\n    name: 'res_stability',\n    amount: 100,\n    rate: -1.67,\n    max: 100,\n    type: 'common',\n    state: 'hidden',\n  },\n  xp: {\n    id: 3,\n    name: 'res_experience',\n    amount: 0,\n    rate: 0,\n    max: 60,\n    type: 'res_common',\n    state: 'hidden',\n  },\n  biomass: {\n    id: 4,\n    name: 'res_biomass',\n    amount: 0,\n    rate: 0,\n    max: 200,\n    type: 'common',\n    state: 'hidden',\n  },\n  egregore: {\n    id: 20,\n    name: 'res_egregore',\n    amount: 0,\n    rate: 0,\n    max: Number.MAX_VALUE,\n    type: 'persistent',\n    state: 'hidden',\n  },\n};\n\nexport default defaultResources;\n","import { createSlice } from '@reduxjs/toolkit';\nimport initialState from './defaultResources';\n\nexport const resourceSlice = createSlice({\n  name: 'resources',\n  initialState,\n  reducers: {\n    updateAllResources: (state, action) => {\n      const seconds = action.payload / 1000;\n      Object.entries(state).forEach(([resource, data]) => {\n        if (data.rate !== 0) {\n          // prettier-ignore\n          const newAmount = Math.max(state[resource].amount + data.rate * seconds, 0);\n          state[resource].amount = Math.min(newAmount, state[resource].max);\n        }\n      });\n    },\n    addResource: (state, action) => {\n      const { resource, amount } = action.payload;\n      state[resource].amount += amount;\n    },\n    setResourceRate: (state, action) => {\n      const { resource, rate } = action.payload;\n      state[resource].rate = rate;\n    },\n    showResource: (state, action) => {\n      state[action.payload].state = 'active';\n    },\n    setDefaultResources: (state) => {\n      Object.entries(initialState).forEach(([key, val]) => {\n        state[key] = val;\n      });\n    },\n  },\n});\n\nexport const {\n  updateAllResources,\n  setResourceRate,\n  setDefaultResources,\n  showResource,\n  addResource,\n} = resourceSlice.actions;\nexport default resourceSlice.reducer;\n","const strings = {\n  btn_clear: 'Clear',\n  btn_decant: 'Decant',\n  btn_explore: 'Explore',\n  btn_save: 'Save',\n  msg_log_start: '[LOG] Begin Messages',\n  msg_decant:\n    '[SYS] colonist {colonist} released from cryosleep :: instability {stability}',\n  msg_no_resources: '[RESOURCES UNAVAILABLE]',\n  msg_colonist_expired: '[SYS] colonist {colonist} expired :: unviable',\n  res_stability: 'Stability',\n  res_experience: 'Experience',\n  res_biomass: 'Biomass',\n  res_egregore: 'Egregore',\n};\n\nexport function printString(options) {\n  let string = strings[options.template];\n  for (const key in options) {\n    string = string.replace(`{${key}}`, options[key]);\n  }\n  return string;\n}\n\nexport default strings;\n","import { createSlice } from '@reduxjs/toolkit';\nimport strings, { printString } from '../assets/strings-en';\n\nconst initialState = {\n  debug: false,\n  fps: 5,\n  logEntries: [strings.msg_log_start],\n  paused: true,\n  frozen: true,\n  decants: 0,\n  colonistId: -1,\n};\n\nexport const gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    pause: (state) => {\n      state.paused = true;\n    },\n    unpause: (state) => {\n      state.paused = false;\n    },\n    debug: (state, action) => {\n      state.debug = action.payload;\n    },\n    setFPS: (state, action) => {\n      state.fps = action.payload;\n    },\n    freeze: (state) => {\n      state.paused = true;\n      state.frozen = true;\n    },\n    start: (state) => {\n      state.paused = false;\n      state.frozen = false;\n    },\n    log: (state, { payload }) => {\n      let message;\n      if (typeof payload === 'object') {\n        message = printString(payload);\n      } else if (strings[payload]) {\n        message = strings[payload];\n      } else {\n        message = payload;\n      }\n      state.logEntries.push(message);\n      console.log('[LOG]', message);\n    },\n    decant: (state) => {\n      state.paused = false;\n      state.frozen = false;\n      state.decants += 1;\n    },\n    setColonistId: (state, { payload }) => {\n      state.colonistId = payload;\n    },\n  },\n});\n\nexport const {\n  pause,\n  unpause,\n  debug,\n  setFPS,\n  freeze,\n  start,\n  log,\n  decant,\n  setColonistId,\n} = gameSlice.actions;\nexport default gameSlice.reducer;\n","import { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { warmCooldowns } from '../lib/dataSlice';\nimport { updateAllResources } from '../lib/resourceSlice';\nimport useEvents from './useEvents';\n\nexport function useHeartbeat() {\n  const dispatch = useDispatch();\n  const events = useEvents();\n  const resources = useSelector((s) => s.resources);\n  const paused = useSelector((s) => s.game.paused);\n  const fps = useSelector((s) => s.game.fps);\n  const ms = fps > 0 ? 1000 / fps : Number.MAX_VALUE;\n  const savedCallback = useRef(() => {\n    dispatch(updateAllResources(ms));\n    dispatch(warmCooldowns(ms));\n  });\n\n  useEffect(() => {\n    if (fps > 0 && !paused) {\n      const id = setInterval(() => {\n        savedCallback.current(ms);\n        events(resources);\n      }, ms);\n      return () => clearInterval(id);\n    }\n  }, [fps, ms, paused, resources]); // eslint-disable-line react-hooks/exhaustive-deps\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addColonistBiomass, decayBiomass } from '../lib/dataSlice';\nimport { freeze, log } from '../lib/gameSlice';\n\nexport default function useEvents() {\n  const dispatch = useDispatch();\n  const colonistId = useSelector((s) => s.game.colonistId);\n  // const biomass = useSelector(s => s.resources.biomass.amount)\n\n  return (resources) => {\n\n    // Check if colonist has destabilized and died - freeze/cleanup, and add/decay biomass\n    if (resources.stability.amount <= 0) {\n      dispatch(freeze());\n      dispatch(log({ template: 'msg_colonist_expired', colonist: colonistId }));\n      dispatch(addColonistBiomass());\n      dispatch(decayBiomass());\n    }\n  };\n}\n","import strings from '../assets/strings-en';\n\nexport default function Resource({ resource }) {\n  const { name, amount, rate, max, type, state } = resource;\n\n  return (\n    <div className={`resource ${state} ${type}`}>\n      <strong>{strings[name]}:</strong> {amount.toFixed(2)}/{max}{' '}\n      {rate !== 0 ? `(${rate.toFixed(2)}/sec)` : ''}\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Resource from './Resource';\nimport strings from '../assets/strings-en';\n\nexport default function ResourceList() {\n  const numDecants = useSelector((s) => s.game.decants);\n  const resources = useSelector((s) => Object.values(s.resources));\n\n  return (\n    <div className=\"resource-list\">\n      {numDecants > 0\n        ? resources.map((resource) => (\n            <Resource resource={resource} key={resource.id} />\n          ))\n        : strings.msg_no_resources}\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\n\nexport default function Log() {\n  const entries = useSelector((s) => s.game.logEntries);\n\n  return (\n    <div className=\"log-entries\">\n      {entries && entries.map((entry) => (\n        <p key={Math.random()}>{entry}</p>\n      ))}\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { log, decant, setColonistId } from '../../lib/gameSlice';\nimport { setDefaultResources, showResource } from '../../lib/resourceSlice';\nimport strings from '../../assets/strings-en';\n\nexport default function DecantButton() {\n  const dispatch = useDispatch();\n  const stability = useSelector((s) => s.resources.stability.rate);\n  const colonistId = Date.now().toString().substr(-8);\n\n  return (\n    <button\n      className=\"button-primary\"\n      onClick={() => {\n        dispatch(setDefaultResources());\n        dispatch(decant());\n        dispatch(showResource('stability'));\n        dispatch(setColonistId(colonistId));\n        dispatch(\n          log({\n            template: 'msg_decant',\n            colonist: colonistId,\n            stability: stability < 0 ? 'HIGH' : 'none',\n          })\n        );\n      }}\n    >\n      {strings.btn_decant}\n    </button>\n  );\n}\n","import strings from '../../assets/strings-en';\nimport { useDispatch } from 'react-redux';\nimport { startCooldown } from '../../lib/dataSlice';\n\nexport default function CooldownButton({\n  cooldown,\n  cool_id,\n  label_id,\n  callback,\n}) {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"btn-cooldown\">\n      <div\n        className=\"btn-cooldown-bar\"\n        style={{ width: `${(cooldown.seconds / cooldown.max) * 100}%` }}\n      />\n      <button\n        className=\"cooldown\"\n        disabled={cooldown.seconds > 0}\n        onClick={() => {\n          dispatch(startCooldown(cool_id));\n          callback();\n        }}\n      >\n        {strings[label_id]} : {Math.ceil(cooldown.seconds)}\n      </button>\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { log } from '../../lib/gameSlice';\nimport { addResource, showResource } from '../../lib/resourceSlice';\nimport CooldownButton from './CooldownButton';\n\nexport default function ExploreButton() {\n  const cooldown = useSelector((s) => s.data.cool_explore);\n  const experience = useSelector((s) => s.resources.xp);\n  const dispatch = useDispatch();\n\n  function handleExplore() {\n    dispatch(log('Exploring....TK'));\n    dispatch(addResource({ resource: 'xp', amount: 1 }));\n    if (experience.state === 'hidden') {\n      dispatch(showResource('xp'));\n    }\n  }\n\n  return (\n    <CooldownButton\n      cooldown={cooldown}\n      cool_id=\"cool_explore\"\n      label_id=\"btn_explore\"\n      callback={handleExplore}\n    />\n  );\n}\n","import { useSelector } from 'react-redux';\nimport DecantButton from './buttons/DecantButton';\nimport ExploreButton from './buttons/ExploreButton';\n\nexport default function ActionPanel() {\n  const frozen = useSelector((s) => s.game.frozen);\n\n  return <div className=\"action-panel\">\n    {frozen ? <DecantButton /> : <ExploreButton />}\n    </div>;\n}\n","import ResourceList from './ResourceList';\nimport Log from './Log';\nimport ActionPanel from './ActionPanel';\n\nexport default function MainPage() {\n\n  return (\n    <div className=\"main-page\">\n      <ResourceList />\n      <ActionPanel />\n      <Log />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/orbital.391d4365.svg\";","import { useDispatch, useSelector } from 'react-redux';\nimport { pause, unpause } from '../lib/gameSlice';\nimport orbit from '../assets/orbital.svg';\n\nexport default function Header() {\n  const dispatch = useDispatch();\n  const paused = useSelector((s) => s.game.paused);\n  const frozen = useSelector((s) => s.game.frozen);\n\n  return (\n    <header>\n      <h1>minuet</h1>\n      <img\n        className={paused ? 'orbit' : 'orbit spin'}\n        src={orbit}\n        alt=\"orbit logo\"\n        onClick={\n          paused && !frozen\n            ? () => dispatch(unpause())\n            : () => dispatch(pause())\n        }\n      />\n    </header>\n  );\n}\n","import strings from '../assets/strings-en'\n\nexport default function Footer() {\n  return <footer>\n    <button>{strings.btn_save}</button> <button>{strings.btn_clear}</button>\n  </footer>\n}","import './css/App.css';\nimport { useHeartbeat } from './hooks/useHeartbeat';\nimport MainPage from './components/MainPage';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nfunction App() {\n  useHeartbeat();  \n\n  return (\n    <div className=\"container\">\n      <Header />\n      <MainPage />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport resourceSlice from './resourceSlice';\nimport gameSlice from './gameSlice';\nimport dataSlice from './dataSlice';\n\nexport const store = configureStore({\n  reducer: {\n    resources: resourceSlice,\n    game: gameSlice,\n    data: dataSlice\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './lib/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}