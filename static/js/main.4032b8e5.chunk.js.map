{"version":3,"sources":["hooks/useRandom.js","lib/defaultData.js","lib/dataSlice.js","lib/defaultResources.js","lib/resourceSlice.js","assets/strings-en.js","lib/gameSlice.js","hooks/useHeartbeat.js","hooks/useEvents.js","components/Resource.js","components/ResourceList.js","components/Log.js","components/buttons/DecantButton.js","components/buttons/CooldownButton.js","components/buttons/ExploreButton.js","hooks/useActionMessage.js","components/ActionPanel.js","components/MainPage.js","assets/orbital.svg","components/Header.js","components/Footer.js","App.js","lib/store.js","index.js"],"names":["rollBetween","min","max","times","total","i","Math","random","defaultData","available_biomass","amount","decay","generate_min","generate_max","cool_explore","type","seconds","msg_explore","active","count","messages","after","chance","text","dataSlice","createSlice","name","initialState","reducers","resetGame","state","console","log","warmCooldowns","payload","Object","entries","forEach","key","data","ms","startCooldown","addColonistBiomass","decayBiomass","shiftActionMessage","splice","length","incrementActionMessage","actions","defaultResources","stability","id","rate","xp","biomass","egregore","Number","MAX_VALUE","resourceSlice","updateAllResources","action","resource","newAmount","addResource","setResourceRate","showResource","setDefaultResources","val","strings","btn_clear","btn_decant","btn_explore","btn_save","msg_no_resources","msg_log_start","msg_decant","msg_colonist_expired","msg_biomass_discover","msg_wire_discover","msg_scrap_discover","msg_explore_1","msg_explore_2","msg_explore_3","msg_explore_4","res_stability","res_experience","res_biomass","res_wire","res_scrap","res_egregore","debug","fps","logEntries","paused","frozen","decants","colonistId","gameSlice","pause","unpause","setFPS","freeze","start","message","options","string","template","replace","printString","push","decant","setColonistId","useHeartbeat","dispatch","useDispatch","events","useSelector","s","game","resources","colonist","useEvents","savedCallback","useRef","useEffect","setInterval","current","clearInterval","Resource","className","toFixed","ResourceList","numDecants","values","map","Log","slice","reverse","entry","DecantButton","Date","now","toString","substr","onClick","CooldownButton","cooldown","cool_id","label_id","callback","style","width","disabled","ceil","ExploreButton","experience","useActionMessage","ActionPanel","MainPage","Header","src","orbit","alt","Footer","App","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4032b8e5.chunk.js","sourcesContent":["export function rollBetween(min, max, times = 1) {\n  let total = 0;\n  for (let i = 0; i < times; i++) {\n    total += Math.random() * (max - min) + min;\n  }\n  return total;\n}\n\nexport default function useRandom() {\n  return { rollBetween };\n}\n","const defaultData = {\n  available_biomass: {\n    amount: 0,\n    decay: 0.5,\n    generate_min: 60,\n    generate_max: 90,\n  },\n  cool_explore: {\n    type: 'cooldown',\n    max: 12,\n    seconds: 0,\n  },\n\n  msg_explore: {\n    active: true,\n    count: 0,\n    messages: [\n      { after: 1, chance: 1, text: 'msg_explore_1' },\n      { after: 3, chance: 1, text: 'msg_explore_2' },\n      { after: 9, chance: .25, text: 'msg_explore_3' },\n      { after: 10, chance: .25, text: 'msg_explore_4' },\n    ],\n  },\n};\n\nexport default defaultData;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { rollBetween } from '../hooks/useRandom';\nimport initialState from './defaultData';\n\nexport const dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    resetGame: (state) => {\n      console.log('TK reset game data');\n    },\n    warmCooldowns: (state, { payload }) => {\n      Object.entries(state).forEach(([key, data]) => {\n        const ms = payload / 1000;\n        if (data.type === 'cooldown' && data.seconds > 0) {\n          state[key].seconds = Math.max(data.seconds - ms, 0);\n        }\n      });\n    },\n    startCooldown: (state, { payload }) => {\n      state[payload].seconds = state[payload].max;\n    },\n    addColonistBiomass: (state, { payload }) => {\n      state.available_biomass.amount += rollBetween(\n        state.available_biomass.generate_min,\n        state.available_biomass.generate_max,\n        payload || 1\n      );\n    },\n    decayBiomass: (state) => {\n      state.available_biomass.amount -=\n        state.available_biomass.amount * state.available_biomass.decay;\n    },\n\n    shiftActionMessage: (state, { payload }) => {\n      if (state[payload].active) {\n        state[payload].messages.splice(0, 1);\n        if (state[payload].messages.length < 1) {\n          state[payload].active = false;\n        }\n      }\n    },\n    incrementActionMessage: (state, { payload }) => {\n      state[payload].count += 1;\n    },\n  },\n});\n\nexport const {\n  warmCooldowns,\n  startCooldown,\n  addColonistBiomass,\n  decayBiomass,\n  shiftActionMessage,\n  incrementActionMessage,\n} = dataSlice.actions;\nexport default dataSlice.reducer;\n","const defaultResources = {\n  stability: {\n    id: 1,\n    name: 'res_stability',\n    amount: 100,\n    rate: -1.67,\n    max: 100,\n    type: 'common',\n    state: 'hidden',\n  },\n  xp: {\n    id: 3,\n    name: 'res_experience',\n    amount: 0,\n    rate: 0,\n    max: 60,\n    type: 'res_common',\n    state: 'hidden',\n  },\n  biomass: {\n    id: 4,\n    name: 'res_biomass',\n    amount: 0,\n    rate: 0,\n    max: 200,\n    type: 'common',\n    state: 'hidden',\n  },\n  egregore: {\n    id: 20,\n    name: 'res_egregore',\n    amount: 0,\n    rate: 0,\n    max: Number.MAX_VALUE,\n    type: 'persistent',\n    state: 'hidden',\n  },\n};\n\nexport default defaultResources;\n","import { createSlice } from '@reduxjs/toolkit';\nimport initialState from './defaultResources';\n\nexport const resourceSlice = createSlice({\n  name: 'resources',\n  initialState,\n  reducers: {\n    updateAllResources: (state, action) => {\n      const seconds = action.payload / 1000;\n      Object.entries(state).forEach(([resource, data]) => {\n        if (data.rate !== 0) {\n          // prettier-ignore\n          const newAmount = Math.max(state[resource].amount + data.rate * seconds, 0);\n          state[resource].amount = Math.min(newAmount, state[resource].max);\n        }\n      });\n    },\n    addResource: (state, action) => {\n      const { resource, amount } = action.payload;\n      state[resource].amount += amount;\n    },\n    setResourceRate: (state, action) => {\n      const { resource, rate } = action.payload;\n      state[resource].rate = rate;\n    },\n    showResource: (state, action) => {\n      state[action.payload].state = 'active';\n    },\n    setDefaultResources: (state) => {\n      Object.entries(initialState).forEach(([key, val]) => {\n        state[key] = val;\n      });\n    },\n  },\n});\n\nexport const {\n  updateAllResources,\n  setResourceRate,\n  setDefaultResources,\n  showResource,\n  addResource,\n} = resourceSlice.actions;\nexport default resourceSlice.reducer;\n","const strings = {\n  btn_clear: 'Clear',\n  btn_decant: 'Decant',\n  btn_explore: 'Explore',\n  btn_save: 'Save',\n\n  msg_no_resources: '[RESOURCES UNAVAILABLE]',\n  msg_log_start: '[LOG] Begin Messages',\n\n  msg_decant:\n    '[SYS] colonist {colonist} released from cryosleep :: instability {stability}',\n  msg_colonist_expired: '[SYS] colonist {colonist} expired :: unviable',\n\n  msg_biomass_discover:\n    'You come across a pile of unrecognizable biological goo. Gross, but possibly useful.',\n  msg_wire_discover:\n    'You find an open panel, rip out the wiring, and stow it away someplace safe.',\n  msg_scrap_discover:\n    'You stumble upon some scrap metal. This junk may come in handy later.',\n\n  msg_explore_1:\n    'You are surrounded by endless hallways and catwalks around a vast chamber filled with frosted glass capsules.',\n  msg_explore_2:\n    'You become weaker and weaker as you feel your body collapsing in on itself.',\n  msg_explore_3:\n    \"Something tickles at the back of your mind, as if you've been here before...\",\n  msg_explore_4:\n    \"You discover a disused storage closet. Maybe you can stash a few things there, in case you don't make it...\",\n\n  res_stability: 'Stability',\n  res_experience: 'Experience',\n  res_biomass: 'Biomass',\n  res_wire: 'Wire',\n  res_scrap: 'Scrap',\n  res_egregore: 'Egregore',\n};\n\nexport function printString(options) {\n  let string = strings[options.template];\n  for (const key in options) {\n    string = string.replace(`{${key}}`, options[key]);\n  }\n  return string;\n}\n\nexport default strings;\n","import { createSlice } from '@reduxjs/toolkit';\nimport strings, { printString } from '../assets/strings-en';\n\nconst initialState = {\n  debug: false,\n  fps: 5,\n  logEntries: [strings.msg_log_start],\n  paused: true,\n  frozen: true,\n  decants: 0,\n  colonistId: -1,\n};\n\nexport const gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    pause: (state) => {\n      state.paused = true;\n    },\n    unpause: (state) => {\n      state.paused = false;\n    },\n    debug: (state, action) => {\n      state.debug = action.payload;\n    },\n    setFPS: (state, action) => {\n      state.fps = action.payload;\n    },\n    freeze: (state) => {\n      state.paused = true;\n      state.frozen = true;\n    },\n    start: (state) => {\n      state.paused = false;\n      state.frozen = false;\n    },\n    log: (state, { payload }) => {\n      let message;\n      if (typeof payload === 'object') {\n        message = printString(payload);\n      } else if (strings[payload]) {\n        message = strings[payload];\n      } else {\n        message = payload;\n      }\n      state.logEntries.push(message);\n      console.log('[LOG]', message);\n    },\n    decant: (state) => {\n      state.paused = false;\n      state.frozen = false;\n      state.decants += 1;\n    },\n    setColonistId: (state, { payload }) => {\n      state.colonistId = payload;\n    },\n  },\n});\n\nexport const {\n  pause,\n  unpause,\n  debug,\n  setFPS,\n  freeze,\n  start,\n  log,\n  decant,\n  setColonistId,\n} = gameSlice.actions;\nexport default gameSlice.reducer;\n","import { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { warmCooldowns } from '../lib/dataSlice';\nimport { updateAllResources } from '../lib/resourceSlice';\nimport useEvents from './useEvents';\n\nexport function useHeartbeat() {\n  const dispatch = useDispatch();\n  const events = useEvents();\n  const resources = useSelector((s) => s.resources);\n  const paused = useSelector((s) => s.game.paused);\n  const fps = useSelector((s) => s.game.fps);\n  const ms = fps > 0 ? 1000 / fps : Number.MAX_VALUE;\n  const savedCallback = useRef(() => {\n    dispatch(updateAllResources(ms));\n    dispatch(warmCooldowns(ms));\n  });\n\n  useEffect(() => {\n    if (fps > 0 && !paused) {\n      const id = setInterval(() => {\n        savedCallback.current(ms);\n        events(resources);\n      }, ms);\n      return () => clearInterval(id);\n    }\n  }, [fps, ms, paused, resources]); // eslint-disable-line react-hooks/exhaustive-deps\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addColonistBiomass, decayBiomass } from '../lib/dataSlice';\nimport { freeze, log } from '../lib/gameSlice';\n\nexport default function useEvents() {\n  const dispatch = useDispatch();\n  const colonistId = useSelector((s) => s.game.colonistId);\n  // const biomass = useSelector(s => s.resources.biomass.amount)\n\n  return (resources) => {\n\n    // Check if colonist has destabilized and died - freeze/cleanup, and add/decay biomass\n    if (resources.stability.amount <= 0) {\n      dispatch(freeze());\n      dispatch(log({ template: 'msg_colonist_expired', colonist: colonistId }));\n      dispatch(addColonistBiomass());\n      dispatch(decayBiomass());\n    }\n  };\n}\n","import strings from '../assets/strings-en';\n\nexport default function Resource({ resource }) {\n  const { name, amount, rate, max, type, state } = resource;\n\n  return (\n    <div className={`resource ${state} ${type}`}>\n      <strong>{strings[name]}:</strong> {amount.toFixed(2)}/{max}{' '}\n      {rate !== 0 ? `(${rate.toFixed(2)}/sec)` : ''}\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Resource from './Resource';\nimport strings from '../assets/strings-en';\n\nexport default function ResourceList() {\n  const numDecants = useSelector((s) => s.game.decants);\n  const resources = useSelector((s) => Object.values(s.resources));\n\n  return (\n    <div className=\"resource-list\">\n      {numDecants > 0\n        ? resources.map((resource) => (\n            <Resource resource={resource} key={resource.id} />\n          ))\n        : strings.msg_no_resources}\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\n\nexport default function Log() {\n  const entries = useSelector((s) => s.game.logEntries);\n\n  return (\n    <div className=\"log-entries\">\n      {entries && entries.slice().reverse().map((entry) => (\n        <p key={Math.random()}>{entry}</p>\n      ))}\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { log, decant, setColonistId } from '../../lib/gameSlice';\nimport { setDefaultResources, showResource } from '../../lib/resourceSlice';\nimport strings from '../../assets/strings-en';\n\nexport default function DecantButton() {\n  const dispatch = useDispatch();\n  const stability = useSelector((s) => s.resources.stability.rate);\n  const colonistId = Date.now().toString().substr(-8);\n\n  return (\n    <button\n      className=\"button-primary\"\n      onClick={() => {\n        dispatch(setDefaultResources());\n        dispatch(decant());\n        dispatch(showResource('stability'));\n        dispatch(setColonistId(colonistId));\n        dispatch(\n          log({\n            template: 'msg_decant',\n            colonist: colonistId,\n            stability: stability < 0 ? 'HIGH' : 'none',\n          })\n        );\n      }}\n    >\n      {strings.btn_decant}\n    </button>\n  );\n}\n","import strings from '../../assets/strings-en';\nimport { useDispatch } from 'react-redux';\nimport { startCooldown } from '../../lib/dataSlice';\n\nexport default function CooldownButton({\n  cooldown,\n  cool_id,\n  label_id,\n  callback,\n}) {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"btn-cooldown\">\n      <div\n        className=\"btn-cooldown-bar\"\n        style={{ width: `${(cooldown.seconds / cooldown.max) * 100}%` }}\n      />\n      <button\n        className=\"cooldown\"\n        disabled={cooldown.seconds > 0}\n        onClick={() => {\n          dispatch(startCooldown(cool_id));\n          callback();\n        }}\n      >\n        {strings[label_id]} : {Math.ceil(cooldown.seconds)}\n      </button>\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport useActionMessage from '../../hooks/useActionMessage';\nimport { addResource, showResource } from '../../lib/resourceSlice';\nimport CooldownButton from './CooldownButton';\n\nexport default function ExploreButton() {\n  const cooldown = useSelector((s) => s.data.cool_explore);\n  const experience = useSelector((s) => s.resources.xp);\n  const dispatch = useDispatch();\n  const message = useActionMessage('msg_explore')\n\n  function handleExplore() {\n    dispatch(addResource({ resource: 'xp', amount: 1 }));\n    message();\n    if (experience.state === 'hidden') {\n      dispatch(showResource('xp'));\n    }\n  }\n\n  return (\n    <CooldownButton\n      cooldown={cooldown}\n      cool_id=\"cool_explore\"\n      label_id=\"btn_explore\"\n      callback={handleExplore}\n    />\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { incrementActionMessage, shiftActionMessage } from '../lib/dataSlice';\nimport { log } from '../lib/gameSlice';\n\nexport default function useActionMessage(key) {\n  const dispatch = useDispatch();\n  const data = useSelector((s) => s.data[key]);\n\n  return function () {\n    if (data.active) {\n      const message = data.messages[0];\n      if (data.count >= message.after && Math.random() < message.chance) {\n        dispatch(log(message.text));\n        dispatch(shiftActionMessage(key));\n      }\n      dispatch(incrementActionMessage(key));\n    }\n  };\n}\n","import { useSelector } from 'react-redux';\nimport DecantButton from './buttons/DecantButton';\nimport ExploreButton from './buttons/ExploreButton';\n\nexport default function ActionPanel() {\n  const frozen = useSelector((s) => s.game.frozen);\n\n  return <div className=\"action-panel\">\n    {frozen ? <DecantButton /> : <ExploreButton />}\n    </div>;\n}\n","import ResourceList from './ResourceList';\nimport Log from './Log';\nimport ActionPanel from './ActionPanel';\n\nexport default function MainPage() {\n\n  return (\n    <div className=\"main-page\">\n      <ResourceList />\n      <ActionPanel />\n      <Log />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/orbital.391d4365.svg\";","import { useDispatch, useSelector } from 'react-redux';\nimport { pause, unpause } from '../lib/gameSlice';\nimport orbit from '../assets/orbital.svg';\n\nexport default function Header() {\n  const dispatch = useDispatch();\n  const paused = useSelector((s) => s.game.paused);\n  const frozen = useSelector((s) => s.game.frozen);\n\n  return (\n    <header>\n      <h1>minuet</h1>\n      <img\n        className={paused ? 'orbit' : 'orbit spin'}\n        src={orbit}\n        alt=\"orbit logo\"\n        onClick={\n          paused && !frozen\n            ? () => dispatch(unpause())\n            : () => dispatch(pause())\n        }\n      />\n    </header>\n  );\n}\n","import strings from '../assets/strings-en'\n\nexport default function Footer() {\n  return <footer>\n    <button>{strings.btn_save}</button> <button>{strings.btn_clear}</button>\n  </footer>\n}","import './css/App.css';\nimport { useHeartbeat } from './hooks/useHeartbeat';\nimport MainPage from './components/MainPage';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nfunction App() {\n  useHeartbeat();  \n\n  return (\n    <div className=\"container\">\n      <Header />\n      <MainPage />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport resourceSlice from './resourceSlice';\nimport gameSlice from './gameSlice';\nimport dataSlice from './dataSlice';\n\nexport const store = configureStore({\n  reducer: {\n    resources: resourceSlice,\n    game: gameSlice,\n    data: dataSlice\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './lib/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}