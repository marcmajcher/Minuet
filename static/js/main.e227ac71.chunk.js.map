{"version":3,"sources":["hooks/useRandom.js","lib/defaultData.js","lib/dataSlice.js","lib/defaultResources.js","lib/resourceSlice.js","assets/strings-en.js","lib/gameSlice.js","hooks/useHeartbeat.js","hooks/useEvents.js","components/Resource.js","components/ResourceList.js","components/Log.js","components/buttons/DecantButton.js","components/buttons/CooldownButton.js","components/buttons/ExploreButton.js","hooks/useActionMessage.js","hooks/useDrops.js","components/ActionPanel.js","components/MainPage.js","assets/orbital.svg","components/Header.js","components/Footer.js","App.js","lib/store.js","index.js"],"names":["rollBetween","min","max","times","total","i","Math","random","defaultData","available_biomass","amount","decay","generate_min","generate_max","cool_explore","type","seconds","count","dropAt","droptable_explore","drop_biomass","drop_wire","drop_scrap","resource","description","first","limit","msg_explore","active","messages","after","chance","text","dataSlice","createSlice","name","initialState","reducers","warmCooldowns","state","ms","payload","Object","entries","forEach","key","data","startCooldown","resetCooldowns","keys","addColonistBiomass","decayBiomass","shiftActionMessage","splice","length","incrementActionMessage","removeFirstResourceMessage","actions","defaultResources","stability","id","rate","xp","biomass","wire","scrap","egregore","Number","MAX_VALUE","resourceSlice","updateAllResources","action","newAmount","addResource","setResourceRate","showResource","setDefaultResources","val","strings","and","you_find","btn_clear","btn_decant","btn_explore","btn_save","desc_biomass","desc_wire","desc_scrap","msg_no_resources","msg_log_start","msg_decant","msg_colonist_expired","msg_biomass_discover","msg_wire_discover","msg_scrap_discover","msg_explore_1","msg_explore_2","msg_explore_3","msg_explore_4","res_stability","res_experience","res_biomass","res_wire","res_scrap","res_egregore","debug","fps","logEntries","paused","frozen","decants","colonistId","gameSlice","pause","unpause","setFPS","freeze","start","log","message","options","string","template","replace","printString","push","decant","setColonistId","useHeartbeat","dispatch","useDispatch","events","useSelector","s","game","resources","colonist","useEvents","savedCallback","useRef","useEffect","setInterval","current","clearInterval","Resource","className","toFixed","ResourceList","numDecants","values","map","Log","slice","reverse","entry","DecantButton","Date","now","toString","substr","onClick","CooldownButton","cooldown","cool_id","label_id","callback","style","width","disabled","ceil","ExploreButton","experience","useActionMessage","drops","dropKey","dropTable","dropMessages","dropItem","item","useDrops","formatList","items","itemStrings","join","ActionPanel","MainPage","Header","src","orbit","alt","Footer","App","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e227ac71.chunk.js","sourcesContent":["export function rollBetween(min, max, times = 1) {\n  let total = 0;\n  for (let i = 0; i < times; i++) {\n    total += Math.random() * (max - min) + min;\n  }\n  return total;\n}\n\nexport default function useRandom() {\n  return { rollBetween };\n}\n","const defaultData = {\n  available_biomass: {\n    amount: 0,\n    decay: 0.5,\n    generate_min: 60,\n    generate_max: 90,\n  },\n\n  cool_explore: {\n    type: 'cooldown',\n    max: 12,\n    seconds: 0,\n    count: 0,\n    dropAt: 3,\n  },\n\n  droptable_explore: {\n    drop_biomass: 0.25,\n    drop_wire: 0.15,\n    drop_scrap: 0.15,\n  },\n\n  drop_biomass: {\n    resource: 'biomass',\n    description: 'desc_biomass',\n    first: 'msg_biomass_discover',\n    min: 5,\n    max: 20,\n    limit: 'available_biomass',\n  },\n  drop_wire: {\n    resource: 'wire',\n    description: 'desc_wire',\n    first: 'msg_wire_discover',\n    min: 1,\n    max: 4,\n  },\n  drop_scrap: {\n    resource: 'scrap',\n    description: 'desc_scrap',\n    first: 'msg_scrap_discover',\n    min: 2,\n    max: 10,\n  },\n\n  msg_explore: {\n    active: true,\n    count: 0,\n    messages: [\n      { after: 1, chance: 1, text: 'msg_explore_1' },\n      { after: 3, chance: 1, text: 'msg_explore_2' },\n      { after: 9, chance: 0.25, text: 'msg_explore_3' },\n      { after: 10, chance: 0.25, text: 'msg_explore_4' },\n    ],\n  },\n};\n\nexport default defaultData;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { rollBetween } from '../hooks/useRandom';\nimport initialState from './defaultData';\n\nexport const dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    // resetGame: (state) => {\n    // },\n\n    warmCooldowns: (state, { payload }) => {\n      const ms = payload / 1000;\n      Object.entries(state).forEach(([key, data]) => {\n        if (data.type === 'cooldown' && data.seconds > 0) {\n          state[key].seconds = Math.max(data.seconds - ms, 0);\n        }\n      });\n    },\n    startCooldown: (state, { payload }) => {\n      state[payload].seconds = state[payload].max;\n      state[payload].count += 1;\n    },\n    resetCooldowns: (state) => {\n      Object.keys(state).forEach((key) => {\n        state[key].seconds = 0;\n      });\n    },\n\n    addColonistBiomass: (state, { payload }) => {\n      state.available_biomass.amount += rollBetween(\n        state.available_biomass.generate_min,\n        state.available_biomass.generate_max,\n        payload || 1\n      );\n    },\n    decayBiomass: (state) => {\n      state.available_biomass.amount -=\n        state.available_biomass.amount * state.available_biomass.decay;\n    },\n\n    shiftActionMessage: (state, { payload }) => {\n      if (state[payload].active) {\n        state[payload].messages.splice(0, 1);\n        if (state[payload].messages.length < 1) {\n          state[payload].active = false;\n        }\n      }\n    },\n    incrementActionMessage: (state, { payload }) => {\n      state[payload].count += 1;\n    },\n\n    removeFirstResourceMessage: (state, { payload }) => {\n      delete state[payload].first;\n    },\n  },\n});\n\nexport const {\n  warmCooldowns,\n  startCooldown,\n  resetCooldowns,\n  addColonistBiomass,\n  decayBiomass,\n  shiftActionMessage,\n  incrementActionMessage,\n  removeFirstResourceMessage,\n} = dataSlice.actions;\nexport default dataSlice.reducer;\n","const defaultResources = {\n  stability: {\n    id: 1,\n    name: 'res_stability',\n    amount: 100,\n    rate: -1.67,\n    max: 100,\n    type: 'common',\n    state: 'hidden',\n  },\n  xp: {\n    id: 3,\n    name: 'res_experience',\n    amount: 0,\n    rate: 0,\n    max: 60,\n    type: 'res_common',\n    state: 'hidden',\n  },\n  biomass: {\n    id: 4,\n    name: 'res_biomass',\n    amount: 0,\n    rate: 0,\n    max: 200,\n    type: 'common',\n    state: 'hidden',\n  },\n  wire: {\n    id: 5,\n    name: 'res_wire',\n    amount: 0,\n    rate: 0,\n    max: 50,\n    type: 'common',\n    state: 'hidden',\n  },\n  scrap: {\n    id: 6,\n    name: 'res_scrap',\n    amount: 0,\n    rate: 0,\n    max: 50,\n    type: 'common',\n    state: 'hidden',\n  },\n  egregore: {\n    id: 20,\n    name: 'res_egregore',\n    amount: 0,\n    rate: 0,\n    max: Number.MAX_VALUE,\n    type: 'persistent',\n    state: 'hidden',\n  },\n};\n\nexport default defaultResources;\n","import { createSlice } from '@reduxjs/toolkit';\nimport initialState from './defaultResources';\n\nexport const resourceSlice = createSlice({\n  name: 'resources',\n  initialState,\n  reducers: {\n    updateAllResources: (state, action) => {\n      const seconds = action.payload / 1000;\n      Object.entries(state).forEach(([resource, data]) => {\n        if (data.rate !== 0) {\n          // prettier-ignore\n          const newAmount = Math.max(state[resource].amount + data.rate * seconds, 0);\n          state[resource].amount = Math.min(newAmount, state[resource].max);\n        }\n      });\n    },\n    addResource: (state, action) => {\n      const { resource, amount } = action.payload;\n      const newAmount = state[resource].amount + amount;\n      state[resource].amount = Math.min(newAmount, state[resource].max)\n      state[resource].state = 'active';\n    },\n    setResourceRate: (state, action) => {\n      const { resource, rate } = action.payload;\n      state[resource].rate = rate;\n    },\n    showResource: (state, action) => {\n      state[action.payload].state = 'active';\n    },\n    setDefaultResources: (state) => {\n      Object.entries(initialState).forEach(([key, val]) => {\n        state[key] = val;\n      });\n    },\n  },\n});\n\nexport const {\n  updateAllResources,\n  setResourceRate,\n  setDefaultResources,\n  showResource,\n  addResource,\n} = resourceSlice.actions;\nexport default resourceSlice.reducer;\n","const strings = {\n  and: 'and',\n  you_find: 'You find {items}',\n\n  btn_clear: 'Clear',\n  btn_decant: 'Decant',\n  btn_explore: 'Explore',\n  btn_save: 'Save',\n\n  desc_biomass: 'some unrecognizable biological material',\n  desc_wire: 'a length of scaveneged wire',\n  desc_scrap: 'a few pieces of scrap metal',\n  \n  msg_no_resources: '[RESOURCES UNAVAILABLE]',\n  msg_log_start: '[LOG] Begin Messages',\n\n  msg_decant:\n    '[SYS] colonist {colonist} released from cryosleep :: instability {stability}',\n  msg_colonist_expired: '[SYS] colonist {colonist} expired :: unviable',\n\n  msg_biomass_discover:\n    'You come across a pile of unrecognizable biological goo. Gross, but possibly useful.',\n  msg_wire_discover:\n    'You find an open panel, rip out the wiring, and stow it away someplace safe.',\n  msg_scrap_discover:\n    'You stumble upon some scrap metal. This junk may come in handy later.',\n\n  msg_explore_1:\n    'You are surrounded by endless hallways and catwalks around a vast chamber filled with frosted glass capsules.',\n  msg_explore_2:\n    'You become weaker and weaker as you feel your body collapsing in on itself.',\n  msg_explore_3:\n    \"Something tickles at the back of your mind, as if you've been here before...\",\n  msg_explore_4:\n    \"You discover a disused storage closet. Maybe you can stash a few things there, in case you don't make it...\",\n\n  res_stability: 'Stability',\n  res_experience: 'Experience',\n  res_biomass: 'Biomass',\n  res_wire: 'Wire',\n  res_scrap: 'Scrap',\n  res_egregore: 'Egregore',\n};\n\nexport function printString(options) {\n  let string = strings[options.template];\n  for (const key in options) {\n    string = string.replace(`{${key}}`, options[key]);\n  }\n  return string;\n}\n\nexport default strings;\n","import { createSlice } from '@reduxjs/toolkit';\nimport strings, { printString } from '../assets/strings-en';\n\nconst initialState = {\n  debug: false,\n  fps: 5,\n  logEntries: [strings.msg_log_start],\n  paused: true,\n  frozen: true,\n  decants: 0,\n  colonistId: -1,\n};\n\nexport const gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    pause: (state) => {\n      state.paused = true;\n    },\n    unpause: (state) => {\n      state.paused = false;\n    },\n    debug: (state, action) => {\n      state.debug = action.payload;\n    },\n    setFPS: (state, action) => {\n      state.fps = action.payload;\n    },\n    freeze: (state) => {\n      state.paused = true;\n      state.frozen = true;\n    },\n    start: (state) => {\n      state.paused = false;\n      state.frozen = false;\n    },\n    log: (state, { payload }) => {\n      let message;\n      if (typeof payload === 'object') {\n        message = printString(payload);\n      } else if (strings[payload]) {\n        message = strings[payload];\n      } else {\n        message = payload;\n      }\n      if (message) {\n        state.logEntries.push(message);\n        if (process.env.NODE_ENV === 'development') {\n          console.log('[LOG]', message);\n        }\n      }\n    },\n    decant: (state) => {\n      state.paused = false;\n      state.frozen = false;\n      state.decants += 1;\n    },\n    setColonistId: (state, { payload }) => {\n      state.colonistId = payload;\n    },\n  },\n});\n\nexport const {\n  pause,\n  unpause,\n  debug,\n  setFPS,\n  freeze,\n  start,\n  log,\n  decant,\n  setColonistId,\n} = gameSlice.actions;\nexport default gameSlice.reducer;\n","import { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { warmCooldowns } from '../lib/dataSlice';\nimport { updateAllResources } from '../lib/resourceSlice';\nimport useEvents from './useEvents';\n\nexport function useHeartbeat() {\n  const dispatch = useDispatch();\n  const events = useEvents();\n  const resources = useSelector((s) => s.resources);\n  const paused = useSelector((s) => s.game.paused);\n  const fps = useSelector((s) => s.game.fps);\n  const ms = fps > 0 ? 1000 / fps : Number.MAX_VALUE;\n  const savedCallback = useRef(() => {\n    dispatch(updateAllResources(ms));\n    dispatch(warmCooldowns(ms));\n  });\n\n  useEffect(() => {\n    if (fps > 0 && !paused) {\n      const id = setInterval(() => {\n        savedCallback.current(ms);\n        events(resources);\n      }, ms);\n      return () => clearInterval(id);\n    }\n  }, [fps, ms, paused, resources]); // eslint-disable-line react-hooks/exhaustive-deps\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addColonistBiomass, decayBiomass } from '../lib/dataSlice';\nimport { freeze, log } from '../lib/gameSlice';\n\nexport default function useEvents() {\n  const dispatch = useDispatch();\n  const colonistId = useSelector((s) => s.game.colonistId);\n  // const biomass = useSelector(s => s.resources.biomass.amount)\n\n  return (resources) => {\n\n    // Check if colonist has destabilized and died - freeze/cleanup, and add/decay biomass\n    if (resources.stability.amount <= 0) {\n      dispatch(freeze());\n      dispatch(log({ template: 'msg_colonist_expired', colonist: colonistId }));\n      dispatch(addColonistBiomass());\n      dispatch(decayBiomass());\n    }\n  };\n}\n","import strings from '../assets/strings-en';\n\nexport default function Resource({ resource }) {\n  const { name, amount, rate, max, type, state } = resource;\n\n  return (\n    <div className={`resource ${state} ${type}`}>\n      <strong>{strings[name]}:</strong> {amount.toFixed(2)}/{max}{' '}\n      {rate !== 0 ? `(${rate.toFixed(2)}/sec)` : ''}\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Resource from './Resource';\nimport strings from '../assets/strings-en';\n\nexport default function ResourceList() {\n  const numDecants = useSelector((s) => s.game.decants);\n  const resources = useSelector((s) => Object.values(s.resources));\n\n  return (\n    <div className=\"resource-list\">\n      {numDecants > 0\n        ? resources.map((resource) => (\n            <Resource resource={resource} key={resource.id} />\n          ))\n        : strings.msg_no_resources}\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\n\nexport default function Log() {\n  const entries = useSelector((s) => s.game.logEntries);\n\n  return (\n    <div className=\"log-entries\">\n      {entries && entries.slice().reverse().map((entry) => (\n        <p key={Math.random()}>{entry}</p>\n      ))}\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { log, decant, setColonistId } from '../../lib/gameSlice';\nimport { setDefaultResources, showResource } from '../../lib/resourceSlice';\nimport strings from '../../assets/strings-en';\nimport { resetCooldowns } from '../../lib/dataSlice';\n\nexport default function DecantButton() {\n  const dispatch = useDispatch();\n  const stability = useSelector((s) => s.resources.stability.rate);\n  const colonistId = Date.now().toString().substr(-8);\n\n  return (\n    <button\n      className=\"button-primary\"\n      onClick={() => {\n        dispatch(setDefaultResources());\n        dispatch(resetCooldowns());\n        dispatch(decant());\n        dispatch(showResource('stability'));\n        dispatch(setColonistId(colonistId));\n        dispatch(\n          log({\n            template: 'msg_decant',\n            colonist: colonistId,\n            stability: stability < 0 ? 'HIGH' : 'none',\n          })\n        );\n      }}\n    >\n      {strings.btn_decant}\n    </button>\n  );\n}\n","import strings from '../../assets/strings-en';\nimport { useDispatch } from 'react-redux';\nimport { startCooldown } from '../../lib/dataSlice';\n\nexport default function CooldownButton({\n  cooldown,\n  cool_id,\n  label_id,\n  callback,\n}) {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"btn-cooldown\">\n      <div\n        className=\"btn-cooldown-bar\"\n        style={{ width: `${(cooldown.seconds / cooldown.max) * 100}%` }}\n      />\n      <button\n        className=\"cooldown\"\n        disabled={cooldown.seconds > 0}\n        onClick={() => {\n          dispatch(startCooldown(cool_id));\n          callback();\n        }}\n      >\n        {strings[label_id]} : {Math.ceil(cooldown.seconds)}\n      </button>\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport strings from '../../assets/strings-en';\nimport useActionMessage from '../../hooks/useActionMessage';\nimport useDrops from '../../hooks/useDrops';\nimport { log } from '../../lib/gameSlice';\nimport { addResource, showResource } from '../../lib/resourceSlice';\nimport CooldownButton from './CooldownButton';\n\nexport default function ExploreButton() {\n  const cooldown = useSelector((s) => s.data.cool_explore);\n  const experience = useSelector((s) => s.resources.xp);\n  const dispatch = useDispatch();\n  const message = useActionMessage('msg_explore');\n  const drops = useDrops('droptable_explore');\n\n  function formatList(items) {\n    const itemStrings = items.map((item) => strings[item]);\n    switch (itemStrings.length) {\n      case 0:\n        return '';\n      case 1:\n        return itemStrings[0];\n      case 2:\n        return `${itemStrings[0]} ${strings.and} ${itemStrings[1]}`;\n      default:\n        itemStrings[itemStrings.length - 1] = `${strings.and} ${\n          itemStrings[itemStrings.length - 1]\n        }`;\n        return itemStrings.join(', ');\n    }\n  }\n\n  function handleExplore() {\n    if (cooldown.count >= cooldown.dropAt) {\n      const dropMessages = drops();\n      if (dropMessages.length > 0) {\n        dispatch(\n          log({\n            template: 'you_find',\n            items: formatList(dropMessages),\n          })\n        );\n      }\n    }\n\n    dispatch(addResource({ resource: 'xp', amount: 1 }));\n    if (experience.state === 'hidden') {\n      dispatch(showResource('xp'));\n    }\n\n    message();\n  }\n\n  return (\n    <CooldownButton\n      cooldown={cooldown}\n      cool_id=\"cool_explore\"\n      label_id=\"btn_explore\"\n      callback={handleExplore}\n    />\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { incrementActionMessage, shiftActionMessage } from '../lib/dataSlice';\nimport { log } from '../lib/gameSlice';\n\nexport default function useActionMessage(key) {\n  const dispatch = useDispatch();\n  const data = useSelector((s) => s.data[key]);\n\n  return function () {\n    if (data.active) {\n      const message = data.messages[0];\n      if (data.count >= message.after && Math.random() < message.chance) {\n        dispatch(log(message.text));\n        dispatch(shiftActionMessage(key));\n      }\n      dispatch(incrementActionMessage(key));\n    }\n  };\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { removeFirstResourceMessage } from '../lib/dataSlice';\nimport { log } from '../lib/gameSlice';\nimport { addResource } from '../lib/resourceSlice';\nimport { rollBetween } from './useRandom';\n\nexport default function useDrops(dropKey) {\n  const dispatch = useDispatch();\n  const dropTable = useSelector((s) => s.data[dropKey]);\n  const data = useSelector((s) => s.data);\n\n  return function () {\n    const dropMessages = [];\n\n    for (let dropItem in dropTable) {\n      const roll = Math.random();\n\n      if (roll < dropTable[dropItem]) {\n        const item = data[dropItem];\n\n        if (item.limit && data[item.limit].amount <= 0) {\n          continue;\n        }\n\n        if (item.first) {\n          dispatch(log(item.first));\n          dispatch(removeFirstResourceMessage(dropItem));\n        } else {\n          dropMessages.push(item.description);\n        }\n\n        let amount = rollBetween(item.min, item.max);\n        if (item.limit) {\n          amount = Math.min(amount, data[item.limit].amount);\n        }\n        \n        dispatch(addResource({ resource: item.resource, amount }));\n      }\n    }\n\n    return dropMessages;\n  };\n}\n","import { useSelector } from 'react-redux';\nimport DecantButton from './buttons/DecantButton';\nimport ExploreButton from './buttons/ExploreButton';\n\nexport default function ActionPanel() {\n  const frozen = useSelector((s) => s.game.frozen);\n\n  return <div className=\"action-panel\">\n    {frozen ? <DecantButton /> : <ExploreButton />}\n    </div>;\n}\n","import ResourceList from './ResourceList';\nimport Log from './Log';\nimport ActionPanel from './ActionPanel';\n\nexport default function MainPage() {\n\n  return (\n    <div className=\"main-page\">\n      <ResourceList />\n      <ActionPanel />\n      <Log />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/orbital.391d4365.svg\";","import { useDispatch, useSelector } from 'react-redux';\nimport { pause, unpause } from '../lib/gameSlice';\nimport orbit from '../assets/orbital.svg';\n\nexport default function Header() {\n  const dispatch = useDispatch();\n  const paused = useSelector((s) => s.game.paused);\n  const frozen = useSelector((s) => s.game.frozen);\n\n  return (\n    <header>\n      <h1>minuet</h1>\n      <img\n        className={paused ? 'orbit' : 'orbit spin'}\n        src={orbit}\n        alt=\"orbit logo\"\n        onClick={\n          paused && !frozen\n            ? () => dispatch(unpause())\n            : () => dispatch(pause())\n        }\n      />\n    </header>\n  );\n}\n","import strings from '../assets/strings-en'\n\nexport default function Footer() {\n  return <footer>\n    <button>{strings.btn_save}</button> <button>{strings.btn_clear}</button>\n  </footer>\n}","import './css/App.css';\nimport { useHeartbeat } from './hooks/useHeartbeat';\nimport MainPage from './components/MainPage';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nfunction App() {\n  useHeartbeat();  \n\n  return (\n    <div className=\"container\">\n      <Header />\n      <MainPage />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport resourceSlice from './resourceSlice';\nimport gameSlice from './gameSlice';\nimport dataSlice from './dataSlice';\n\nexport const store = configureStore({\n  reducer: {\n    resources: resourceSlice,\n    game: gameSlice,\n    data: dataSlice\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './lib/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}